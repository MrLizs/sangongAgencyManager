angular.module('RDash', ['ui.bootstrap', 'ui.router', 'ngCookies','ngFileUpload']);
'use strict';
//var ServerRootURL = 'http://192.168.1.185:9029';
var ServerRootURL = 'http://192.168.1.107:9029';
//var ServerRootURL = 'http://192.168.1.241:9029';

var AppRootURL = 'http://127.0.0.1:9028';

angular.module('RDash').config(['$stateProvider', '$urlRouterProvider',
    function($stateProvider, $urlRouterProvider) {

        // For unmatched routes
        $urlRouterProvider.otherwise('/dashboard');

        // Application routes
        $stateProvider
            .state('login', {
                url: '/login',
                controller: 'LoginCtrl',
                templateUrl: 'templates/login.html'
            })
            .state('index', {
                url: '/',
                controller: 'DashboardCtrl',
                templateUrl: 'templates/dashboard.html'
            })
            .state('dashboard',{
                url:'/dashboard',
                controller:"DashboardCtrl",
                templateUrl:"templates/dashboard.html"
            })
                    
            .state('myTeam',{
                url:'/myTeam',
                controller:'myTeamCtrl',
                templateUrl:'templates/myTeam.html'
            })
            .state('myPlayer',{
                url:'/myPlayer',
                controller:'myPlayerCtrl',
                templateUrl:'templates/myPlayer.html'
            })

            .state('myInformation',{
                url:'/myInformation',
                controller:'myInformationCtrl',
                templateUrl:'templates/myInformation.html'
            })

            .state('withdraw',{
                url:'/withdraw',
                controller:'withdrawCtrl',
                templateUrl:'templates/withdraw.html'
            })          
            

    }
]);
angular
    .module('RDash')
    .controller('AlertsCtrl', ['$scope', AlertsCtrl]);

function AlertsCtrl($scope) {
    /*
    $scope.alerts = [{
        type: 'success',
        msg: 'Thanks for visiting! Feel free to create pull requests to improve the dashboard!'
    }, {
        type: 'danger',
        msg: 'Found a bug? Create an issue with as many details as you can.'
    }];

    $scope.addAlert = function() {
        $scope.alerts.push({
            msg: 'Another alert!'
        });
    };

    $scope.closeAlert = function(index) {
        $scope.alerts.splice(index, 1);
    };
    */
}
/**
 * DashboardCtrl Controller
 */

angular.module('RDash')
    .controller('DashboardCtrl', ['$scope','$rootScope', '$cookieStore', DashboardCtrl]);

function DashboardCtrl($scope,$rootScope, $cookieStore) {
    $rootScope.frame.pageTitle = '首页';
}
/**
 * LoginCtrl Controller
 */

angular.module('RDash')
    .controller('LoginCtrl', ['$scope','$rootScope', '$cookieStore','$state','$timeout','$location','$window','LoginService', LoginCtrl]);

function LoginCtrl($scope,$rootScope, $cookieStore,$state,$timeout,$location,$window,LoginService) {
    $rootScope.updateFrame();
    $scope.formData = {
        userName:'',
        password:'',
    };
    $scope.login=function(){
        LoginService.login($scope.formData.userName,$scope.formData.password,function(err,data){
            if(err){
                alert(err);
            }else{
                $cookieStore.put('token',data);
                $window.location.href=AppRootURL;
                console.log(data);
            }
        });
    }
}
/**
 * Master Controller
 */

angular.module('RDash')
    .controller('MasterCtrl', ['$scope','$rootScope','$state', '$cookieStore','$timeout','$window','LoginService', MasterCtrl]);

function MasterCtrl($scope, $rootScope,$state,$cookieStore,$timeout,$window,LoginService) {

    var updateFrame = function(){
        var token = $cookieStore.get('token');
        $scope.formData = {isLogined:!!token};
    }
    $rootScope.updateFrame = updateFrame;
    updateFrame();

    $scope.frame = {
        pageTitle:'',
    };
    $rootScope.frame = $scope.frame;
    
    $scope.$on('$viewContentLoaded',function(){
        if(!$scope.formData.isLogined){
            $state.go('login');
        }
    });

    $scope.logout = function(){
        LoginService.logout($cookieStore.get('token'),function(err){
            if(err){
                alert(err);
            }else{
                $cookieStore.remove('token');
                //$state.go('login');
                $window.location.href=AppRootURL+'/#/login';
            }
        });
    }
    /**
     * Sidebar Toggle & Cookie Control
     */
    var mobileView = 992;

    $scope.getWidth = function() {
        return window.innerWidth;
    };

    $scope.$watch($scope.getWidth, function(newValue, oldValue) {
        if (newValue >= mobileView) {
            if (angular.isDefined($cookieStore.get('toggle'))) {
                $scope.toggle = ! $cookieStore.get('toggle') ? false : true;
            } else {
                $scope.toggle = true;
            }
        } else {
            $scope.toggle = false;
        }

    });

    $scope.toggleSidebar = function() {
        $scope.toggle = !$scope.toggle;
        $cookieStore.put('toggle', $scope.toggle);
    };

    window.onresize = function() {
        $scope.$apply();
    };
}
angular.module('RDash')
    .controller('myInformationCtrl', ['$scope', '$rootScope', '$cookieStore', '$http', myInformationCtrl])
function myInformationCtrl($scope, $rootScope, $cookieStore, $http) {
    $rootScope.frame.pageTitle = '我的信息';
    var token = $cookieStore.get('token');
    console.log(token);

    $scope.myInfo = {
        password: ''
    }

    $scope.formData = {
        password: '',
        newpassword: '',
        money:''
    }

    $http({
        method: 'GET',
        url: ServerRootURL + '/api/admin/agency/get_myAgencyInfo',
        headers: {
            'Authorization': token
        }
    }).then(function success(res) {
        console.log(res);
        $scope.myInfo = res.data;
        $scope.myInfo.password = res.data.password;
       
    }, function error(res) {
           alert('出现异常');
    })

    //修改密码
    $scope.savePassword = function () {
        var password = $scope.formData.password;
        var newpassword = $scope.formData.newpassword;
        if (!password) {
            alert('请输入旧密码');
            return;
        } else if (newpassword.length < 6 || newpassword.length > 12) {
            alert('密码长度6-12位');
            return;
        } else {
            $http({
                method: 'POST',
                url: ServerRootURL + '/api/admin/agency/get_ChangePW',
                data: {
                    password: $scope.formData.password,
                    newpassword: $scope.formData.newpassword
                },
                headers: {
                    'Authorization': token
                }
            }).then(function success(res) {
                console.log(res);

            }, function error(res) {
                alert('出现异常');
            })
        }

    }

    //代理提现
    $scope.withdraw=function(){
        var  money = $scope.formData.money;
        if(money<=0){
           alert('请输入正确金额');
           return;
        }else{
            $http({
                method: 'POST',
                url: ServerRootURL + '/api/admin/agency/add_agencyOrders',
                data: {
                    money: $scope.formData.money
                },
                headers: {
                    'Authorization': token
                }
            }).then(function success(res) {
                console.log(res);
                alert('申请提现成功，请联系相关客服人员');
                
            }, function error(res) {
                   alert('出现异常');
            })
        }
       
    
    }
    


    $('#myModal1').on('shown.bs.modal', function () {
        $('#myInput').focus()
    });

    $('#myModal2').on('shown.bs.modal', function () {
        $('#myInput').focus()
    });

    $('#myModal3').on('shown.bs.modal', function () {
        $('#myInput').focus()
    });

    $('#myModal4').on('shown.bs.modal', function () {
        $('#myInput').focus()
    });
}
angular.module('RDash')
    .controller('myPlayerCtrl', ['$scope', '$rootScope', '$cookieStore', '$http', myPlayerCtrl])
function myPlayerCtrl($scope, $rootScope, $cookieStore, $http) {
    $rootScope.frame.pageTitle = '我的玩家';
    var token = $cookieStore.get('token');
    console.log(token);

    $scope.formData = {
        ybValue: '',
        jbValue: ''
    }

    $scope.players = {}

    $scope.yuanBaos = function (player) {
        $scope.player = player;
    }

    $scope.glodCoins = function (player) {
        $scope.player = player;
    }

    $http({
        method: 'GET',
        url: ServerRootURL + '/api/admin/agency/get_agency_player',
        headers: {
            'Authorization': token
        }
    }).then(function success(res) {
        console.log(res);
        $scope.players = res.data;
        var players = $scope.players;

        //分页
        var count = res.data.length;
        $scope.pageSize = 10;
        $scope.pages = Math.ceil(count / $scope.pageSize);
        $scope.newPage = $scope.pages > 5 ? 5 : $scope.pages;
        $scope.pageList = [];
        $scope.selPage = 1;
        $scope.setData = function () {
            $scope.playerList = players.slice(($scope.pageSize * ($scope.selPage - 1)), ($scope.selPage * $scope.pageSize))
        };
        $scope.playerList = players.slice(0, $scope.pageSize);
        for (var i = 0; i < $scope.newPage; i++) {
            $scope.pageList.push(i + 1);
        }
        $scope.selectPage = function (page) {
            if (page < 1 || page > $scope.pages) return;
            if (page > 2) {
                var newpageList = [];
                for (var i = (page - 3); i < ((page + 2) > $scope.pages ? $scope.pages : (page + 2)); i++) {
                    newpageList.push(i + 1);
                }
                $scope.pageList = newpageList;
            }
            $scope.selPage = page;
            $scope.setData();
            $scope.isActivePage(page);
        };
        $scope.isActivePage = function (page) {
            return $scope.selPage == page;
        };
        $scope.Previous = function () {
            $scope.selectPage($scope.selPage - 1);
        };
        $scope.Next = function () {
            $scope.selectPage($scope.selPage + 1);
        };

    }, function error(res) {
        alert('出现异常');
    })

    //给玩家充值元宝
    $scope.addYuanbao = function (userid) {
        var ybValue = $scope.formData.ybValue;
        if (!userid) {
            alert('找不到要充值的玩家');
            return;
        } else if (ybValue < 0) {
            alert('充值数量需大于0');
            return;
        } else {
            $http({
                method: 'POST',
                url: ServerRootURL + '/api/admin/agency/get_addGamegoldForPlayer',
                data: {
                    userid: userid,
                    value: $scope.formData.ybValue
                },
                headers: {
                    'Authorization': token
                }

            }).then(function success(res) {
                console.log(res);
                alert('元宝充值成功');

            }, function error(res) {
                alert('充值出现异常');
            })
        }

    }

    //给玩家充值金币
    $scope.addGoldCoin = function (userid) {
        var jbValue = $scope.formData.jbValue;
        if (!userid) {
            alert('找不到要充值的玩家');
            return false;
        } else if (jbValue < 0) {
            alert('充值数量需大于0');
            return false;
        } else {
            $http({
                method: 'POST',
                url: ServerRootURL + '/api/admin/agency/get_addCoinsForPlayer',
                data: {
                    userid: userid,
                    value: $scope.formData.jbValue
                },
                headers: {
                    'Authorization': token
                }

            }).then(function success(res) {
                console.log(res);
                alert('金币充值成功');
            }, function error(res) {
                alert('充值出现异常');
            })
        }

    }


}
angular.module('RDash')
    .controller('myTeamCtrl', ['$scope', '$rootScope', '$cookieStore', '$http', myTeamCtrl])
function myTeamCtrl($scope, $rootScope, $cookieStore, $http) {
    $rootScope.frame.pageTitle = '我的团队';
    var token = $cookieStore.get('token');
    console.log(token);

    $scope.members = {}
 
    $scope.others={}

    $scope.formData = {
        names: '',
        password: '',
        realname: '',
        contactway: '',
        coinsdiscount: '',
        gamegolddiscount: '',
        gamsdiscount: '',
        userName: ''
    }


    $scope.timeFormat = function (timeStr) {
        if (timeStr && typeof timeStr == 'string') {
            return timeStr.replace(/T/g, ' ').replace(/Z/g, ' ').split('.')[0];
        }
        return '';
    };

    //我的团队信息
    $http({
        method: 'GET',
        url: ServerRootURL + '/api/admin/agency/get_agency_team',
        headers: {
            'Authorization': token
        }
    }).then(function success(res) {
        console.log(res);
        $scope.members = res.data;
        var members= $scope.members;

        //分页
        var count = res.data.length;
        $scope.pageSize = 10;
        $scope.pages = Math.ceil(count / $scope.pageSize);
        $scope.newPage = $scope.pages > 5 ? 5 : $scope.pages;
        $scope.pageList = [];
        $scope.selPage = 1;
        $scope.setData = function () {
            $scope.membersList = members.slice(($scope.pageSize * ($scope.selPage - 1)), ($scope.selPage * $scope.pageSize))
        };
        $scope.membersList = members.slice(0, $scope.pageSize);
        for (var i = 0; i < $scope.newPage; i++) {
            $scope.pageList.push(i + 1);
        }
        $scope.selectPage = function (page) {
            if (page < 1 || page > $scope.pages) return;
            if (page > 2) {
                var newpageList = [];
                for (var i = (page - 3); i < ((page + 2) > $scope.pages ? $scope.pages : (page + 2)); i++) {
                    newpageList.push(i + 1);
                }
                $scope.pageList = newpageList;
            }
            $scope.selPage = page;
            $scope.setData();
            $scope.isActivePage(page);
        };
        $scope.isActivePage = function (page) {
            return $scope.selPage == page;
        };
        $scope.Previous = function () {
            $scope.selectPage($scope.selPage - 1);
        };
        $scope.Next = function () {
            $scope.selectPage($scope.selPage + 1);
        };
    }, function error(res) {
        alert('出现异常');
    })


    //获取他人代理信息
    $scope.searchAgency = function () {
        $http({
            method: 'POST',
            url: ServerRootURL + '/api/admin/agency/get_agencyInfoByID',
            data: {
                username: $scope.formData.userName
            },
            headers: {
                'Authorization': token
            }
        }).then(function success(res) {
            console.log(res);
            $scope.others = res.data;
          

        }, function error(res) {
            alert('出现异常');
        })

    }




    //添加二级代理
    $scope.addAgency = function () {
        var username = $scope.formData.names;
        var password = $scope.formData.password;
        var realname = $scope.formData.realname;
        var phone = $scope.formData.contactway;
        var coinDis = $scope.formData.coinsdiscount;
        var goldDis = $scope.formData.gamegolddiscount;
        var gemDis = $scope.formData.gamsdiscount;
        var myReg = /^1(3|4|5|7|8|9)[0-9]\d{8}$/;
        var pattern = /^(0\.\d{1,2}|0)$/;

        if (!username) {
            alert('请填写用户名');
            return false;
        } else if (password.length < 6 || password.length > 12) {
            alert('密码长度6-12位');
            return false;
        } else if (!realname) {
            alert('请填写代理真实姓名');
            return false;
        } else if (!myReg.test(phone)) {
            alert('请填写有效手机号码');
            return false;
        } else if (!pattern.exec(coinDis) || !pattern.exec(goldDis) || !pattern.exec(gemDis)) {
            alert('折扣是一个小数点后保留两位以内的非负小数');
            return false;
        } else {
            $http({
                method: 'POST',
                url: ServerRootURL + '/api/admin/agency/addAgency',
                data: {
                    username: $scope.formData.names,
                    password: $scope.formData.password,
                    realname: $scope.formData.realname,
                    contactway: $scope.formData.contactway,
                    coinsdiscount: $scope.formData.coinsdiscount,
                    gamegolddiscount: $scope.formData.gamegolddiscount,
                    gamsdiscount: $scope.formData.gamsdiscount
                },
                headers: {
                    'Authorization': token
                }

            }).then(function success(res) {
                console.log(res);
                alert('添加代理成功');
            }, function error(res) {
                alert('添加代理出现异常');
            })
        }


    }

}
/**
 * TablesCtrl Controller
 */

angular.module('RDash')
    .controller('TablesCtrl', ['$scope','$rootScope', '$cookieStore', TablesCtrl]);

function TablesCtrl($scope,$rootScope, $cookieStore) {
    $rootScope.frame.pageTitle = '表单';
    $scope.formData={};
    $scope.formData.name='hello!';
}
angular.module('RDash')
    .controller('withdrawCtrl', ['$scope', '$rootScope', '$cookieStore', '$http', withdrawCtrl])
function withdrawCtrl($scope, $rootScope, $cookieStore, $http) {
    $rootScope.frame.pageTitle = '提现记录';
    var token = $cookieStore.get('token');
    console.log(token);

    $scope.orders = {}
  
    $scope.timeFormat = function (timeStr) {
        if (timeStr && typeof timeStr == 'string') {
            return timeStr.replace(/T/g, ' ').replace(/Z/g, ' ').split('.')[0];
        }
        return '';
    };


    $http({
        method: 'GET',
        url: ServerRootURL + '/api/admin/agency/get_agencyOrders',
        headers: {
            'Authorization': token
        }
    }).then(function success(res) {
        console.log(res);
        $scope.orders = res.data;
        var orders = $scope.orders;
        //分页
        var count = res.data.length;
        $scope.pageSize = 10;
        $scope.pages = Math.ceil(count / $scope.pageSize);
        $scope.newPage = $scope.pages > 5 ? 5 : $scope.pages;
        $scope.pageList = [];
        $scope.selPage = 1;
        $scope.setData = function () {
            $scope.ordersList = orders.slice(($scope.pageSize * ($scope.selPage - 1)), ($scope.selPage * $scope.pageSize))
        };
        $scope.ordersList = orders.slice(0, $scope.pageSize);
        for (var i = 0; i < $scope.newPage; i++) {
            $scope.pageList.push(i + 1);
        }
        $scope.selectPage = function (page) {
            if (page < 1 || page > $scope.pages) return;
            if (page > 2) {
                var newpageList = [];
                for (var i = (page - 3); i < ((page + 2) > $scope.pages ? $scope.pages : (page + 2)); i++) {
                    newpageList.push(i + 1);
                }
                $scope.pageList = newpageList;
            }
            $scope.selPage = page;
            $scope.setData();
            $scope.isActivePage(page);
        };
        $scope.isActivePage = function (page) {
            return $scope.selPage == page;
        };
        $scope.Previous = function () {
            $scope.selectPage($scope.selPage - 1);
        };
        $scope.Next = function () {
            $scope.selectPage($scope.selPage + 1);
        };

    }, function error(res) {
        alert('出现异常');
    })


}
/**
 * Loading Directive
 * @see http://tobiasahlin.com/spinkit/
 */

angular
    .module('RDash')
    .directive('rdLoading', rdLoading);

function rdLoading() {
    var directive = {
        restrict: 'AE',
        template: '<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'
    };
    return directive;
};
/**
 * Widget Body Directive
 */

angular
    .module('RDash')
    .directive('rdWidgetBody', rdWidgetBody);

function rdWidgetBody() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            loading: '=?',
            classes: '@?'
        },
        transclude: true,
        template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};

/**
 * Widget Footer Directive
 */

angular
    .module('RDash')
    .directive('rdWidgetFooter', rdWidgetFooter);

function rdWidgetFooter() {
    var directive = {
        requires: '^rdWidget',
        transclude: true,
        template: '<div class="widget-footer" ng-transclude></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Header Directive
 */

angular
    .module('RDash')
    .directive('rdWidgetHeader', rdWidgetTitle);

function rdWidgetTitle() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            title: '@',
            icon: '@'
        },
        transclude: true,
        template: '<div class="widget-header"><div class="row"><div class="pull-left"><i class="fa" ng-class="icon"></i> {{title}} </div><div class="pull-right col-xs-6 col-sm-4" ng-transclude></div></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Directive
 */

angular
    .module('RDash')
    .directive('rdWidget', rdWidget);

function rdWidget() {
    var directive = {
        transclude: true,
        template: '<div class="widget" ng-transclude></div>',
        restrict: 'EA'
    };
    return directive;

    function link(scope, element, attrs) {
        /* */
    }
};
angular.module('RDash').factory('LoginService', ['$http', LoginService]);

function LoginService($http) {
    var login = function (userName, password, callback) {
     
        $http({
            method: 'POST',
            url: ServerRootURL + '/api/admin/agency/login',
            data: {
                userName: userName,
                password: password,
            },
            headers: {
                'Content-Type': 'application/json',
            }
        }).then(
            function successCallback(res) {
                callback(null, res.data);
              
            }, function errorCallback(res) {
                callback(res);
            });

    };

    var logout = function (token, callback) {
        $http({
            method: 'GET',
            url: ServerRootURL + '/api/admin/agency/logout',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': token
            }
        }).then(
            function successCallback(res) {
                callback(null, res.data);
            }, function errorCallback(res) {
                callback(res);
            });
    }

    return {
        login: login,
        logout: logout,
    };
}